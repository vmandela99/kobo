[{"name":"app.R","content":"library(shiny)\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(shinycssloaders)\r\nlibrary(KoboconnectR)\r\nsource(\"modules/filters_module.R\")\r\nsource(\"modules/plot_module.R\")\r\n\r\n\r\n# -------------------------------\r\n# UI\r\n# -------------------------------\r\nui <- fluidPage(\r\n  titlePanel(\"Cohort Dashboard\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      filterUI(\"filters\")\r\n    ),\r\n    mainPanel(\r\n      plotUI(\"plots\")\r\n    )\r\n  )\r\n)\r\n\r\n\r\ntextOutput(\"loading_status\")\r\n\r\n# Define the reactivePoll within the server function\r\nserver <- function(input, output, session) {\r\n  \r\n  # Reactive polling every 20 minutes\r\n  poll_data <- reactivePoll(\r\n    intervalMillis = 1200000,  # 20 minutes\r\n    session = session,\r\n    checkFunc = function() {\r\n      # Use the current time rounded to the nearest 20 minutes as a proxy\r\n      format(Sys.time(), \"%Y-%m-%d %H:%M\")\r\n    },\r\n    valueFunc = function() {\r\n      # Fetch data from KoboToolbox\r\n      ai_cohort1 <- kobo_df_download(\r\n        url = \"kf.kobotoolbox.org\",\r\n        uname = \"vickman\",\r\n        pwd = \"vickman\",\r\n        assetid = \"akWjF8fLC662zYmYYh6YwR\"\r\n      )\r\n      \r\n      # Process the data\r\n      ai_cohort1 %>%\r\n        select(8, 9, 17) %>%\r\n        rename(\r\n          gender = \"Your.gender.\",\r\n          country = \"In.which.country.are.you.currently.located.\",\r\n          availability = \"What.time.would.you.be.comfortable.having.a.2.hour.session...regardless.of.your.country.of.residence.\"\r\n        ) %>%\r\n        mutate(\r\n          income = runif(n(), min = 100, max = 1000),\r\n          poverty_index = runif(n(), min = 1, max = 100)\r\n        )\r\n    }\r\n  )\r\n  \r\n  output$loading_status <- renderText({\r\n    \"Fetching latest data from KoboToolbox...\"\r\n  })\r\n  \r\n  # Use the polled data in your modules\r\n  filtered_data <- filterServer(\"filters\", poll_data)\r\n  plotServer(\"plots\", filtered_data)\r\n}\r\n\r\n# Run the app\r\nshinyApp(ui, server)\r\n","type":"text"},{"name":"DESCRIPTION","content":"Package: kobo\nTitle: What the Package Does (One Line, Title Case)\nVersion: 0.0.0.9000\nAuthors@R: \n    person(\"First\", \"Last\", , \"first.last@example.com\", role = c(\"aut\", \"cre\"))\nDescription: What the package does (one paragraph).\nLicense: `use_mit_license()`, `use_gpl3_license()` or friends to pick a\n    license\nEncoding: UTF-8\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.3.2\n","type":"text"},{"name":"NAMESPACE","content":"# Generated by roxygen2: do not edit by hand\n\n","type":"text"},{"name":"kobo.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: No\r\nSaveWorkspace: No\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n\r\nAutoAppendNewline: Yes\r\nStripTrailingWhitespace: Yes\r\nLineEndingConversion: Posix\r\n\r\nBuildType: Package\r\nPackageUseDevtools: Yes\r\nPackageInstallArgs: --no-multiarch --with-keep.source\r\nPackageRoxygenize: rd,collate,namespace\r\n","type":"text"},{"name":"kobo_auto1.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n\r\nBuildType: Package\r\nPackageUseDevtools: Yes\r\nPackageInstallArgs: --no-multiarch --with-keep.source\r\n","type":"text"},{"name":"modules/filters_module.R","content":"# -------------------------------\r\n# Module UI: Filters\r\n# -------------------------------\r\nfilterUI <- function(id) {\r\n  ns <- NS(id)\r\n  tagList(\r\n    selectInput(ns(\"gender\"), \"Select Gender:\", choices = c(\"All\", unique(filter_cohort$gender))),\r\n    selectInput(ns(\"country\"), \"Select Country:\", choices = c(\"All\", unique(filter_cohort$country))),\r\n    selectInput(ns(\"availability\"), \"Select Availability:\", choices = c(\"All\", unique(filter_cohort$availability)))\r\n  )\r\n}\r\n\r\n# -------------------------------\r\n# Module Server: Filters\r\n# -------------------------------\r\nfilterServer <- function(id, data) {\r\n  moduleServer(id, function(input, output, session) {\r\n    reactive({\r\n      df <- data()\r\n      if (input$gender != \"All\") df <- df %>% filter(gender == input$gender)\r\n      if (input$country != \"All\") df <- df %>% filter(country == input$country)\r\n      if (input$availability != \"All\") df <- df %>% filter(availability == input$availability)\r\n      df\r\n    })\r\n  })\r\n}\r\n","type":"text"},{"name":"modules/plot_module.R","content":"# -------------------------------\r\n# Module UI: Plots\r\n# -------------------------------\r\nplotUI <- function(id) {\r\n  ns <- NS(id)\r\n  tagList(\r\n    withSpinner(plotOutput(ns(\"plot1\")), type = 6),\r\n    withSpinner(plotOutput(ns(\"plot2\")), type = 6)\r\n  )\r\n}\r\n\r\n\r\n\r\n# -------------------------------\r\n# Module Server: Plots\r\n# -------------------------------\r\nplotServer <- function(id, data) {\r\n  moduleServer(id, function(input, output, session) {\r\n    output$plot1 <- renderPlot({\r\n      data() %>%\r\n        group_by(gender) %>%\r\n        summarise(mean_income = mean(income, na.rm = TRUE)) %>%\r\n        ggplot(aes(x = gender, y = mean_income, fill = gender)) +\r\n        geom_bar(stat = \"identity\") +\r\n        labs(title = \"Average Income by Gender\", y = \"Mean Income\") +\r\n        theme_minimal()\r\n    })\r\n    \r\n    output$plot2 <- renderPlot({\r\n      ggplot(data(), aes(x = income, y = poverty_index, color = country)) +\r\n        geom_point(size = 3, alpha = 0.7) +\r\n        labs(title = \"Income vs Poverty Index\", x = \"Income\", y = \"Poverty Index\") +\r\n        theme_minimal()\r\n    })\r\n  })\r\n}\r\n","type":"text"}]
